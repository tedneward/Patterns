/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import org.junit.jupiter.api.Test;

import main.java.org.example.AccountFactory;

import static org.junit.jupiter.api.Assertions.*;

class LibraryTest {
    @Test void someLibraryMethodReturnsTrue() {
        Library classUnderTest = new Library();
        assertTrue(classUnderTest.someLibraryMethod(), "someLibraryMethod should return 'true'");
    }

    @Test void testAccountFactory() {
        // Create an instance of AccountFactory
        AccountFactory af = null;

        // Build an account portfolio with a total amount of 3000
        buildAccountPortfolio(af, 3000);

        // Check if the accounts are created successfully
        assertNotNull(af.getSavingsAccount(), "Savings account should not be null");
        assertNotNull(af.getCheckingAccount(), "Checking account should not be null");
        assertNotNull(af.getInvestmentAccount(), "Investment account should not be null");
    }

    void buildAccountPortfolio(AccountFactory af, int totalAmount) {
        // Open a SavingsAccount, CheckingAccount, and InvestmentAccount
        af.openSavingsAccount(totalAmount / 3);
        af.openCheckingAccount(totalAmount / 3);
        af.openInvestmentAccount(totalAmount / 3);
    }
}
